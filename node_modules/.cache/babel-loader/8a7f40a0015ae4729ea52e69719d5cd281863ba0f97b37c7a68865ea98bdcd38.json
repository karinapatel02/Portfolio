{"ast":null,"code":"var uppercasePattern = /[A-Z]/g;\nvar msPattern = /^ms-/;\nvar cache = {};\nexport default function hyphenateStyleName(prop) {\n  return prop in cache ? cache[prop] : cache[prop] = prop.replace(uppercasePattern, \"-$&\").toLowerCase().replace(msPattern, \"-ms-\");\n}","map":{"version":3,"mappings":"AAAA,IAAMA,gBAAgB,GAAG,QAAzB;AACA,IAAMC,SAAS,GAAG,MAAlB;AACA,IAAMC,KAAK,GAAG,EAAd;AAEA,eAAe,SAASC,kBAAT,CAA4BC,IAA5B,EAAkD;EAC/D,OAAOA,IAAI,IAAIF,KAAR,GACHA,KAAK,CAACE,IAAD,CADF,GAEFF,KAAK,CAACE,IAAD,CAAL,GAAcA,IAAI,CAChBC,OADY,CACJL,gBADI,EACc,KADd,EAEZM,WAFY,GAGZD,OAHY,CAGJJ,SAHI,EAGO,MAHP,CAFnB;AAMD","names":["uppercasePattern","msPattern","cache","hyphenateStyleName","prop","replace","toLowerCase"],"sources":["/Users/karina/KarinaPortfolio/node_modules/styletron-engine-atomic/dist-browser-esm/src/hyphenate-style-name.ts"],"sourcesContent":["const uppercasePattern = /[A-Z]/g;\nconst msPattern = /^ms-/;\nconst cache = {};\n\nexport default function hyphenateStyleName(prop: string): string {\n  return prop in cache\n    ? cache[prop]\n    : (cache[prop] = prop\n        .replace(uppercasePattern, \"-$&\")\n        .toLowerCase()\n        .replace(msPattern, \"-ms-\"));\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}