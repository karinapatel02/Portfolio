{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/karina/KarinaPortfolio/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\n/* eslint-env browser */\nexport var insertRuleIntoDevtools = function insertRuleIntoDevtools(selector, block) {\n  // start after the . combinator and cut at the first : if there is one to cut out the pseudo classes\n  var key = selector.substring(1, selector.indexOf(\":\") !== -1 ? selector.indexOf(\":\") : selector.length);\n  var styles = {}; // split the declaration to catch vendor prefixing\n  var _iterator = _createForOfIteratorHelper(block.split(\";\")),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var decl = _step.value;\n      if (decl.trim() !== \"\" && !window.__STYLETRON_DEVTOOLS__.atomicMap[key]) styles[decl.substring(0, decl.indexOf(\":\"))] = decl.substring(decl.indexOf(\":\") + 1, decl.length);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  window.__STYLETRON_DEVTOOLS__.atomicMap[key] = styles;\n};\nexport var hydrateDevtoolsRule = function hydrateDevtoolsRule(cssString) {\n  var id = cssString.substring(0, 3);\n  var block = cssString.substring(4, cssString.length - 1);\n  insertRuleIntoDevtools(id, block);\n};","map":{"version":3,"mappings":";AAAA;AACA,OAAO,IAAMA,sBAAsB,GAAG,SAAzBA,sBAAsB,CAAIC,QAAD,EAAWC,KAAX,EAAqB;EACzD;EACA,IAAMC,GAAG,GAAGF,QAAQ,CAACG,SAAT,CACV,CADU,EAEVH,QAAQ,CAACI,OAAT,CAAiB,GAAjB,MAA0B,CAAC,CAA3B,GAA+BJ,QAAQ,CAACI,OAAT,CAAiB,GAAjB,CAA/B,GAAuDJ,QAAQ,CAACK,MAFtD,CAAZ;EAIA,IAAMC,MAAM,GAAG,EAAf,CANyD,CAOzD;EAAA,2CACmBL,KAAK,CAACM,KAAN,CAAY,GAAZ,CAAnB;IAAA;EAAA;IAAA,oDAAqC;MAAA,IAA1BC,IAAX;MACE,IAAIA,IAAI,CAACC,IAAL,OAAgB,EAAhB,IAAsB,CAACC,MAAM,CAACC,sBAAP,CAA8BC,SAA9B,CAAwCV,GAAxC,CAA3B,EACEI,MAAM,CAACE,IAAI,CAACL,SAAL,CAAe,CAAf,EAAkBK,IAAI,CAACJ,OAAL,CAAa,GAAb,CAAlB,CAAD,CAAN,GAA+CI,IAAI,CAACL,SAAL,CAC7CK,IAAI,CAACJ,OAAL,CAAa,GAAb,IAAoB,CADyB,EAE7CI,IAAI,CAACH,MAFwC,CAA/C;IAIH;EAAA;IAAA;EAAA;IAAA;EAAA;EAEDK,MAAM,CAACC,sBAAP,CAA8BC,SAA9B,CAAwCV,GAAxC,IAA+CI,MAA/C;AACD,CAjBM;AAmBP,OAAO,IAAMO,mBAAmB,GAAGC,SAAtBD,mBAAmB,CAAGC,SAAS,EAAI;EAC9C,IAAMC,EAAE,GAAGD,SAAS,CAACX,SAAV,CAAoB,CAApB,EAAuB,CAAvB,CAAX;EACA,IAAMF,KAAK,GAAGa,SAAS,CAACX,SAAV,CAAoB,CAApB,EAAuBW,SAAS,CAACT,MAAV,GAAmB,CAA1C,CAAd;EACAN,sBAAsB,CAACgB,EAAD,EAAKd,KAAL,CAAtB;AACD,CAJM","names":["insertRuleIntoDevtools","selector","block","key","substring","indexOf","length","styles","split","decl","trim","window","__STYLETRON_DEVTOOLS__","atomicMap","hydrateDevtoolsRule","cssString","id"],"sources":["/Users/karina/KarinaPortfolio/node_modules/styletron-engine-atomic/dist-browser-esm/src/dev-tool.ts"],"sourcesContent":["/* eslint-env browser */\nexport const insertRuleIntoDevtools = (selector, block) => {\n  // start after the . combinator and cut at the first : if there is one to cut out the pseudo classes\n  const key = selector.substring(\n    1,\n    selector.indexOf(\":\") !== -1 ? selector.indexOf(\":\") : selector.length,\n  );\n  const styles = {};\n  // split the declaration to catch vendor prefixing\n  for (const decl of block.split(\";\")) {\n    if (decl.trim() !== \"\" && !window.__STYLETRON_DEVTOOLS__.atomicMap[key])\n      styles[decl.substring(0, decl.indexOf(\":\"))] = decl.substring(\n        decl.indexOf(\":\") + 1,\n        decl.length,\n      );\n  }\n\n  window.__STYLETRON_DEVTOOLS__.atomicMap[key] = styles;\n};\n\nexport const hydrateDevtoolsRule = cssString => {\n  const id = cssString.substring(0, 3);\n  const block = cssString.substring(4, cssString.length - 1);\n  insertRuleIntoDevtools(id, block);\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}